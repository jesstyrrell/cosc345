name: Build and Release (Windows)

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name'
        required: true
        default: 'Automated Release'
      release_description:
        description: 'Release description'
        required: false
        default: 'Automatically generated release'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Configure CMake
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      # Step 3: Build the project
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      # Step 4: Test the build
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      # Step 5: Run (optional if you want to check executable manually)
      - name: Run
        run: ${{github.workspace}}/build/Release/PokerGame.exe -ci

      # Step 6: Upload the build directory and images directory as artifacts
      - name: Upload build and images directories
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            ${{ github.workspace }}/build/
            ${{ github.workspace }}/images/


  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 7: Checkout the repository to prepare for tagging
      - uses: actions/checkout@v4

      # Step 8: Download the artifact from the build job
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts


      # Step 9: Create a unique tag based on the run number
      - name: Generate and create tag
        id: create_tag
        run: |
          TAG_NAME=v1.0.${{ github.run_number }}
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      # Step 10: Zip build and images files
      - name: Zip directories
        run: |
          mkdir -p temp
          mv build/* temp
          mkdir -p build/build
          mv temp/* build/build
          rm -rf temp
          zip -r runItTwice.zip build/ images/



      # Step 11: Create GitHub Release and upload assets
      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ inputs.release_name }}
          body: ${{ inputs.release_description }}
          files: |
            runItTwice.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
